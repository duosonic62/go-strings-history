// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/outputboundary/string_query.go

// Package mock_outputboundary is a generated GoMock package.
package mock_outputboundary

import (
	input "github.com/duosonic62/go-strings-history/pkg/usecase/input"
	output "github.com/duosonic62/go-strings-history/pkg/usecase/output"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStringQueryPresenter is a mock of StringQueryPresenter interface
type MockStringQueryPresenter struct {
	ctrl     *gomock.Controller
	recorder *MockStringQueryPresenterMockRecorder
}

// MockStringQueryPresenterMockRecorder is the mock recorder for MockStringQueryPresenter
type MockStringQueryPresenterMockRecorder struct {
	mock *MockStringQueryPresenter
}

// NewMockStringQueryPresenter creates a new mock instance
func NewMockStringQueryPresenter(ctrl *gomock.Controller) *MockStringQueryPresenter {
	mock := &MockStringQueryPresenter{ctrl: ctrl}
	mock.recorder = &MockStringQueryPresenterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStringQueryPresenter) EXPECT() *MockStringQueryPresenterMockRecorder {
	return m.recorder
}

// OutputGuitarString mocks base method
func (m *MockStringQueryPresenter) OutputGuitarString(output *output.GuitarStringOutput, ctx input.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OutputGuitarString", output, ctx)
}

// OutputGuitarString indicates an expected call of OutputGuitarString
func (mr *MockStringQueryPresenterMockRecorder) OutputGuitarString(output, ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OutputGuitarString", reflect.TypeOf((*MockStringQueryPresenter)(nil).OutputGuitarString), output, ctx)
}

// OutputGuitarStrings mocks base method
func (m *MockStringQueryPresenter) OutputGuitarStrings(output *[]output.GuitarStringOutput, ctx input.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OutputGuitarStrings", output, ctx)
}

// OutputGuitarStrings indicates an expected call of OutputGuitarStrings
func (mr *MockStringQueryPresenterMockRecorder) OutputGuitarStrings(output, ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OutputGuitarStrings", reflect.TypeOf((*MockStringQueryPresenter)(nil).OutputGuitarStrings), output, ctx)
}
