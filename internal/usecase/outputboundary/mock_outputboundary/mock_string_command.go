// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/outputboundary/string_command.go

// Package mock_outputboundary is a generated GoMock package.
package mock_outputboundary

import (
	input "github.com/duosonic62/go-strings-history/pkg/usecase/input"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStringCommandPresenter is a mock of StringCommandPresenter interface
type MockStringCommandPresenter struct {
	ctrl     *gomock.Controller
	recorder *MockStringCommandPresenterMockRecorder
}

// MockStringCommandPresenterMockRecorder is the mock recorder for MockStringCommandPresenter
type MockStringCommandPresenterMockRecorder struct {
	mock *MockStringCommandPresenter
}

// NewMockStringCommandPresenter creates a new mock instance
func NewMockStringCommandPresenter(ctrl *gomock.Controller) *MockStringCommandPresenter {
	mock := &MockStringCommandPresenter{ctrl: ctrl}
	mock.recorder = &MockStringCommandPresenterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStringCommandPresenter) EXPECT() *MockStringCommandPresenterMockRecorder {
	return m.recorder
}

// OutputAddString mocks base method
func (m *MockStringCommandPresenter) OutputAddString(ctx input.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OutputAddString", ctx)
}

// OutputAddString indicates an expected call of OutputAddString
func (mr *MockStringCommandPresenterMockRecorder) OutputAddString(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OutputAddString", reflect.TypeOf((*MockStringCommandPresenter)(nil).OutputAddString), ctx)
}

// OutputUpdateString mocks base method
func (m *MockStringCommandPresenter) OutputUpdateString(ctx input.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OutputUpdateString", ctx)
}

// OutputUpdateString indicates an expected call of OutputUpdateString
func (mr *MockStringCommandPresenterMockRecorder) OutputUpdateString(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OutputUpdateString", reflect.TypeOf((*MockStringCommandPresenter)(nil).OutputUpdateString), ctx)
}
