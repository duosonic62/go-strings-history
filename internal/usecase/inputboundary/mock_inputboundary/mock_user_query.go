// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/inputboundary/user_query.go

// Package mock_inputboundary is a generated GoMock package.
package mock_inputboundary

import (
	valueobject "github.com/duosonic62/go-strings-history/internal/domain/valueobject"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserQueryUseCase is a mock of UserQueryUseCase interface
type MockUserQueryUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUserQueryUseCaseMockRecorder
}

// MockUserQueryUseCaseMockRecorder is the mock recorder for MockUserQueryUseCase
type MockUserQueryUseCaseMockRecorder struct {
	mock *MockUserQueryUseCase
}

// NewMockUserQueryUseCase creates a new mock instance
func NewMockUserQueryUseCase(ctrl *gomock.Controller) *MockUserQueryUseCase {
	mock := &MockUserQueryUseCase{ctrl: ctrl}
	mock.recorder = &MockUserQueryUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserQueryUseCase) EXPECT() *MockUserQueryUseCaseMockRecorder {
	return m.recorder
}

// Show mocks base method
func (m *MockUserQueryUseCase) Show(token valueobject.AuthorizationToken) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Show", token)
}

// Show indicates an expected call of Show
func (mr *MockUserQueryUseCaseMockRecorder) Show(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Show", reflect.TypeOf((*MockUserQueryUseCase)(nil).Show), token)
}
