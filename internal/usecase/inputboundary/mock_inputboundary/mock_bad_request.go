// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/inputboundary/bad_request.go

// Package mock_inputboundary is a generated GoMock package.
package mock_inputboundary

import (
	input "github.com/duosonic62/go-strings-history/pkg/usecase/input"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBadRequestUseCase is a mock of BadRequestUseCase interface
type MockBadRequestUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockBadRequestUseCaseMockRecorder
}

// MockBadRequestUseCaseMockRecorder is the mock recorder for MockBadRequestUseCase
type MockBadRequestUseCaseMockRecorder struct {
	mock *MockBadRequestUseCase
}

// NewMockBadRequestUseCase creates a new mock instance
func NewMockBadRequestUseCase(ctrl *gomock.Controller) *MockBadRequestUseCase {
	mock := &MockBadRequestUseCase{ctrl: ctrl}
	mock.recorder = &MockBadRequestUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBadRequestUseCase) EXPECT() *MockBadRequestUseCaseMockRecorder {
	return m.recorder
}

// BadRequestError mocks base method
func (m *MockBadRequestUseCase) BadRequestError(ctx input.Context, err error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BadRequestError", ctx, err)
}

// BadRequestError indicates an expected call of BadRequestError
func (mr *MockBadRequestUseCaseMockRecorder) BadRequestError(ctx, err interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BadRequestError", reflect.TypeOf((*MockBadRequestUseCase)(nil).BadRequestError), ctx, err)
}
