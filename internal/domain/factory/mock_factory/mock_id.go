// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/factory/id.go

// Package mock_factory is a generated GoMock package.
package mock_factory

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDFactory is a mock of IDFactory interface
type MockIDFactory struct {
	ctrl     *gomock.Controller
	recorder *MockIDFactoryMockRecorder
}

// MockIDFactoryMockRecorder is the mock recorder for MockIDFactory
type MockIDFactoryMockRecorder struct {
	mock *MockIDFactory
}

// NewMockIDFactory creates a new mock instance
func NewMockIDFactory(ctrl *gomock.Controller) *MockIDFactory {
	mock := &MockIDFactory{ctrl: ctrl}
	mock.recorder = &MockIDFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDFactory) EXPECT() *MockIDFactoryMockRecorder {
	return m.recorder
}

// Gen mocks base method
func (m *MockIDFactory) Gen() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Gen")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Gen indicates an expected call of Gen
func (mr *MockIDFactoryMockRecorder) Gen() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Gen", reflect.TypeOf((*MockIDFactory)(nil).Gen))
}
