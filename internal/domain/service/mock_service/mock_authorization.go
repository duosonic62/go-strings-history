// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/service/authorization.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	entity "github.com/duosonic62/go-strings-history/internal/domain/entity"
	valueobject "github.com/duosonic62/go-strings-history/internal/domain/valueobject"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAuthorizationService is a mock of AuthorizationService interface
type MockAuthorizationService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthorizationServiceMockRecorder
}

// MockAuthorizationServiceMockRecorder is the mock recorder for MockAuthorizationService
type MockAuthorizationServiceMockRecorder struct {
	mock *MockAuthorizationService
}

// NewMockAuthorizationService creates a new mock instance
func NewMockAuthorizationService(ctrl *gomock.Controller) *MockAuthorizationService {
	mock := &MockAuthorizationService{ctrl: ctrl}
	mock.recorder = &MockAuthorizationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAuthorizationService) EXPECT() *MockAuthorizationServiceMockRecorder {
	return m.recorder
}

// Authorized mocks base method
func (m *MockAuthorizationService) Authorized(token *valueobject.AuthorizationToken) (*entity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authorized", token)
	ret0, _ := ret[0].(*entity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Authorized indicates an expected call of Authorized
func (mr *MockAuthorizationServiceMockRecorder) Authorized(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authorized", reflect.TypeOf((*MockAuthorizationService)(nil).Authorized), token)
}
